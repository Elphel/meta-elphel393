DESCRIPTION = "Xilinx Kernel"
SECTION = "kernel"
LICENSE = "GPLv2"

LIC_FILES_CHKSUM = "file://COPYING;md5=d7810fab7487fb0aad327b76f1be7cd7"

# This version extension should match CONFIG_LOCALVERSION in defconfig
LINUX_VERSION_EXTENSION ?= "-xilinx"
PV = "${LINUX_VERSION}${LINUX_VERSION_EXTENSION}+git${SRCPV}"

KBRANCH ?= "master"
SRC_URI = "git://github.com/Xilinx/linux-xlnx;protocol=git;branch=${KBRANCH}"

# Source Directory
S = "${WORKDIR}/git"

FILESEXTRAPATHS_append := "${THISDIR}/linux-xlnx:"
SRC_URI_append += " file://xilinx_nandps_elphel393.patch"
SRC_URI_append += " file://xilinx_emacps.c.patch"

inherit kernel
require linux-dtb.inc
require linux-machine-config.inc

# returns all the elements from the src uri that are .cfg files
def find_config_fragments(d):
    sources=src_patches(d, True)
    sources_list=[]
    for s in sources:
        if s.endswith('.cfg'):
            sources_list.append(s)
    return sources_list

kernel_do_configure_prepend() {
        # Find all ".cfg" files and cat them together into a .config
        CFG_FILES="${@" ".join(find_config_fragments(d))}"
        if [ ! -z "$CFG_FILES" ]; then
                echo "# Generated by linux-xlnx recipe in meta-xilinx" > "${B}/.config"
                for i in $CFG_FILES; do
                        echo "Joining configuration file $i"
                        echo "# $i" >> "${B}/.config"
                        cat $i >> "${B}/.config"
                done
        fi
}
